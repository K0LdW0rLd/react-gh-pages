{"version":3,"sources":["images/headshot.jpg","Home.js","About.js","Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","Component","About","src","me","width","height","alt","Projects","App","class","href","target","to","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,sC,kPCqB5BC,G,uLAhBP,OACI,yBAAKC,UAAY,OACb,yBAAKA,UAAW,aACZ,yBAAKA,UAAU,SACX,6CAGR,yBAAKA,UAAU,WACX,uDACA,gG,GAXDC,c,iBC2BJC,G,uLAxBP,OACI,yBAAKF,UAAU,SACX,yBAAKA,UAAU,YACX,wBAAIA,UAAU,QAAd,mBAEJ,yBAAKG,IAAMC,IAAIC,MAAO,MAAMC,OAAO,MAAMC,IAAM,aAC/C,yBAAKP,UAAU,UACX,wBAAIA,UAAU,gBAAd,MACA,oVACA,wBAAIA,UAAU,gBAAd,aACA,kNACA,wBAAIA,UAAU,gBAAd,uBACA,4BACI,mDACA,uDACA,oEACA,oF,GAlBJC,cCQLO,E,iLARP,OACI,6BACI,iE,GAJOP,aCkCRQ,E,iLA3BX,OACE,kBAAC,IAAD,KACE,yBAAKT,UAAY,aACf,yBAAKA,UAAU,iDACb,uBAAGU,MAAM,eAAeC,KAAK,IAAIC,OAAO,WAExC,kBAAC,IAAD,CAAMC,GAAG,IAAIb,UAAW,gBAAxB,QACA,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,sBACZ,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMa,GAAG,SAASb,UAAU,YAA5B,UAEF,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMa,GAAG,YAAYb,UAAU,YAA/B,gBAKV,kBAAC,IAAD,CAAOc,KAAO,IAAIC,OAAK,EAACC,UAAajB,IACrC,kBAAC,IAAD,CAAOe,KAAO,SAASE,UAAad,IACpC,kBAAC,IAAD,CAAOY,KAAO,YAAYE,UAAaR,U,GAtB7BP,aCKEgB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.0c291a02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.dd289d1c.jpg\";","import React, {Component} from 'react';\nimport './Home.css';\n\nclass Home extends Component {\n    render () {\n        return (\n            <div className = 'box'>\n                <div className ='greetings'>\n                    <div className='hello'>\n                        <p>Hello, World</p>\n                    </div>\n                </div>\n                <div className='welcome'>\n                    <h1>Welcome to my Portfolio</h1>\n                    <p>Feel free to browse around and look at my current projects.</p>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;","import React, {Component} from 'react';\nimport me from './images/headshot.jpg';\nimport './About.css';\n\nclass About extends Component {\n    render () {\n        return (\n            <div className='about'>\n                <div className='greeting'>\n                    <h1 className='hola'>Hi! I am Kelly</h1>\n                </div>\n                <img src= {me} width= '285' height='200' alt = 'headshot' />\n                <div className='iAbout'>\n                    <h3 className='headingThree'>Me</h3>\n                    <p>Since the first alert of Hello World, I knew I wanted to jump into the world of development and programming.  Having a background in Intelligence Analysis, I look at all angles when it comes to solving problems.  I enjoy working with others in a collaborative environment with an emphasis on team development.</p>\n                    <h3 className='headingThree'>Interests</h3>\n                    <p>I love to learn new things about technology. My hobbies include playing videogames, listening to music, playing sports, or reading a good detective novel or anything tech related.</p>\n                    <h3 className='headingThree'>Contact Information</h3>\n                    <ul>\n                        <li>Phone: 757-339-7428</li>\n                        <li>Email: 90kcol@gmail.com</li>\n                        <li>GitHub: https://github.com/K0LdW0rLd</li>\n                        <li>Linkedin: https://www.linkedin.com/in/90kcol/</li>\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, {Component} from 'react';\n\nclass Projects extends Component {\n    render () {\n        return (\n            <div>\n                <h1>Currently Under Construction</h1>\n            </div>\n        )\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Home from './Home';\nimport About from './About';\nimport Projects from './Projects';\n\nclass App extends Component {\n  render(){\n    return(\n      <Router>\n        <div className = 'container'>\n          <nav className=\"navbar navbar-expand-lg navbar-light bg-light\" >\n            <a class=\"navbar-brand\" href='#' target=\"_blank\">\n            </a>\n            <Link to='/' className= 'navbar-brand'>Home</Link>\n            <div className=\"collpase navbar-collapse\">\n              <ul className=\"navbar-nav mr-auto\">\n                <li className=\"navbar-item\">\n                  <Link to=\"/about\" className=\"nav-link\">About</Link>\n                </li>\n                <li className=\"navbar-item\">\n                  <Link to=\"/projects\" className=\"nav-link\">Projects</Link>\n                </li>\n              </ul>\n            </div>\n          </nav>\n        <Route path = '/' exact component = {Home} />\n        <Route path = '/about' component = {About} />\n        <Route path = '/projects' component = {Projects}/> \n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}